{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/estebandib/Documents/dev/whatsapp-message-scheduler/frontend/src/components/WhatsAppInterface.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\n\ninterface WhatsAppChat {\n  id: string;\n  name: string;\n  isGroup: boolean;\n  lastMessage?: {\n    body: string;\n    timestamp: number;\n    fromMe: boolean;\n  };\n  unreadCount: number;\n  profilePicUrl?: string;\n}\n\ninterface WhatsAppMessage {\n  id: string;\n  body: string;\n  timestamp: number;\n  fromMe: boolean;\n  author?: string;\n  authorName?: string; // Display name for group messages\n  authorNumber?: string; // Formatted phone number (only for non-contacts)\n  isContact?: boolean; // Whether the author is in user's contacts\n  type: string;\n}\n\ninterface WhatsAppInterfaceProps {\n  sessionId: string;\n  onDisconnect: () => void;\n}\n\nexport default function WhatsAppInterface({ sessionId, onDisconnect }: WhatsAppInterfaceProps) {\n  const [chats, setChats] = useState<WhatsAppChat[]>([]);\n  const [selectedChat, setSelectedChat] = useState<WhatsAppChat | null>(null);\n  const [messages, setMessages] = useState<WhatsAppMessage[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoadingChats, setIsLoadingChats] = useState(true);\n  const [isLoadingMoreChats, setIsLoadingMoreChats] = useState(false);\n  const [isLoadingMessages, setIsLoadingMessages] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [hasMoreChats, setHasMoreChats] = useState(true);\n  const [totalChats, setTotalChats] = useState(0);\n  const [profilePictures, setProfilePictures] = useState<Record<string, string>>({});\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:3001';\n\n  // Handle session disconnection\n  const handleSessionDisconnected = () => {\n    // Clear the stored session ID to force a new session\n    localStorage.removeItem('whatsapp-session-id');\n    // Trigger the parent component to restart the connection process\n    onDisconnect();\n  };\n\n  // Load chats on component mount\n  useEffect(() => {\n    loadChats();\n  }, [sessionId]);\n\n  // Update messages when selected chat changes\n  useEffect(() => {\n    if (selectedChat) {\n      loadMessages(selectedChat.id);\n    }\n  }, [selectedChat?.id]);\n\n  // Polling for chat list updates every 5 seconds - but only update, don't refetch\n  useEffect(() => {\n    // Only start polling after we have initial chats loaded\n    if (chats.length === 0) return;\n    \n    const interval = setInterval(() => {\n      updateChats();\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [sessionId, chats.length]); // Add chats.length as dependency\n\n  // Polling for message updates every 3 seconds (only when a chat is selected)\n  useEffect(() => {\n    if (selectedChat) {\n      const interval = setInterval(() => {\n        updateMessages(selectedChat.id);\n      }, 3000);\n\n      return () => clearInterval(interval);\n    }\n  }, [selectedChat?.id]);\n\n  const loadChats = async (reset: boolean = true) => {\n    if (reset) {\n      setIsLoadingChats(true);\n      setChats([]);\n    } else {\n      setIsLoadingMoreChats(true);\n    }\n    \n    try {\n      const offset = reset ? 0 : chats.length;\n      const limit = reset ? 20 : 10; // Load 3 initially, then 3 more for maximum speed\n      \n      // Add timeout to frontend request\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 15000); // 15 second timeout\n      \n      const response = await fetch(`${backendUrl}/api/whatsapp/chats?sessionId=${sessionId}&offset=${offset}&limit=${limit}`, {\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        if (reset) {\n          setChats(data.chats);\n        } else {\n          setChats(prevChats => [...prevChats, ...data.chats]);\n        }\n        \n        setHasMoreChats(data.hasMore);\n        setTotalChats(data.total);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to load chats:', errorData);\n        \n        // Check if this is a session disconnected error\n        if (errorData.details && errorData.details.includes('WhatsApp session has been disconnected')) {\n          console.log('Session disconnected, triggering reconnection...');\n          handleSessionDisconnected();\n          return;\n        }\n      }\n    } catch (error) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        console.error('Request timed out while loading chats');\n        // Don't trigger reconnection for timeouts, just show error\n      } else {\n        console.error('Error loading chats:', error);\n      }\n    } finally {\n      if (reset) {\n        setIsLoadingChats(false);\n      } else {\n        setIsLoadingMoreChats(false);\n      }\n    }\n  };\n\n  // Seamless chat list update for polling (no loading state)\n  const updateChats = async () => {\n    try {\n      // Only update the first page of chats to avoid complexity with pagination\n      const response = await fetch(`${backendUrl}/api/whatsapp/chats?sessionId=${sessionId}&offset=0&limit=5`);\n      if (response.ok) {\n        const data = await response.json();\n        \n        setChats(prevChats => {\n          // If no previous chats, just set the new ones (shouldn't happen in polling)\n          if (prevChats.length === 0) {\n            return data.chats;\n          }\n          \n          // Check if there are any actual changes before updating\n          const hasChanges = data.chats.some((newChat: WhatsAppChat) => {\n            const existingChat = prevChats.find(chat => chat.id === newChat.id);\n            if (!existingChat) return true; // New chat\n            \n            // Check if last message or unread count changed\n            const lastMessageChanged = \n              (!existingChat.lastMessage && newChat.lastMessage) ||\n              (existingChat.lastMessage && !newChat.lastMessage) ||\n              (existingChat.lastMessage && newChat.lastMessage && \n               existingChat.lastMessage.timestamp !== newChat.lastMessage.timestamp);\n            \n            const unreadCountChanged = existingChat.unreadCount !== newChat.unreadCount;\n            \n            return lastMessageChanged || unreadCountChanged;\n          });\n          \n          // Only update if there are actual changes\n          if (!hasChanges) {\n            return prevChats;\n          }\n          \n          // Update existing chats with new data (last messages, unread counts)\n          const updatedChats = data.chats.map((newChat: WhatsAppChat) => {\n            const existingChat = prevChats.find(chat => chat.id === newChat.id);\n            \n            // If this is a completely new chat, add it\n            if (!existingChat) {\n              return newChat;\n            }\n            \n            // Update existing chat with new last message and unread count\n            return {\n              ...existingChat,\n              lastMessage: newChat.lastMessage,\n              unreadCount: newChat.unreadCount\n            };\n          });\n          \n          // Add any existing chats that weren't in the new list (for pagination)\n          const newChatIds = data.chats.map((chat: WhatsAppChat) => chat.id);\n          const existingOtherChats = prevChats.filter(chat => !newChatIds.includes(chat.id));\n          \n          // Combine and sort by last message timestamp\n          const allChats = [...updatedChats, ...existingOtherChats];\n          allChats.sort((a, b) => {\n            const aTime = a.lastMessage?.timestamp || 0;\n            const bTime = b.lastMessage?.timestamp || 0;\n            return bTime - aTime;\n          });\n          \n          return allChats;\n        });\n        \n        // Update pagination info\n        setHasMoreChats(data.hasMore);\n        setTotalChats(data.total);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to update chats:', errorData);\n        \n        // Check if this is a session disconnected error\n        if (errorData.details && errorData.details.includes('WhatsApp session has been disconnected')) {\n          console.log('Session disconnected while updating chats, triggering reconnection...');\n          handleSessionDisconnected();\n          return;\n        }\n      }\n    } catch (error) {\n      console.error('Error updating chats:', error);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'auto' });\n  };\n\n  const loadMessages = async (chatId: string) => {\n    setIsLoadingMessages(true);\n    try {\n      const response = await fetch(`${backendUrl}/api/whatsapp/messages?sessionId=${sessionId}&chatId=${chatId}&limit=50`);\n      if (response.ok) {\n        const messagesData = await response.json();\n        setMessages(messagesData);\n        // Scroll to bottom after messages load\n        setTimeout(scrollToBottom, 100);\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to load messages:', errorData);\n        \n        // Check if this is a session disconnected error\n        if (errorData.details && errorData.details.includes('WhatsApp session has been disconnected')) {\n          console.log('Session disconnected while loading messages, triggering reconnection...');\n          handleSessionDisconnected();\n          return;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    } finally {\n      setIsLoadingMessages(false);\n    }\n  };\n\n  // Seamless message update for polling (no loading state)\n  const updateMessages = async (chatId: string) => {\n    try {\n      const response = await fetch(`${backendUrl}/api/whatsapp/messages?sessionId=${sessionId}&chatId=${chatId}&limit=50`);\n      if (response.ok) {\n        const messagesData = await response.json();\n        \n        // Only update if we have new messages\n        setMessages(prevMessages => {\n          // If no previous messages, just set the new ones\n          if (prevMessages.length === 0) {\n            setTimeout(scrollToBottom, 100);\n            return messagesData;\n          }\n          \n          // Check if there are new messages by comparing the last message timestamp\n          const lastPrevMessage = prevMessages[prevMessages.length - 1];\n          const lastNewMessage = messagesData[messagesData.length - 1];\n          \n          if (!lastNewMessage || lastPrevMessage.timestamp >= lastNewMessage.timestamp) {\n            // No new messages, keep existing ones\n            return prevMessages;\n          }\n          \n          // Find new messages that aren't in the previous list\n          const newMessages = messagesData.filter((newMsg: WhatsAppMessage) => \n            !prevMessages.some((prevMsg: WhatsAppMessage) => prevMsg.id === newMsg.id)\n          );\n          \n          if (newMessages.length > 0) {\n            // Scroll to bottom when new messages are added\n            setTimeout(scrollToBottom, 100);\n            return messagesData; // Use the complete updated list from backend\n          }\n          \n          return prevMessages;\n        });\n      } else {\n        const errorData = await response.json();\n        console.error('Failed to update messages:', errorData);\n        \n        // Check if this is a session disconnected error\n        if (errorData.details && errorData.details.includes('WhatsApp session has been disconnected')) {\n          console.log('Session disconnected while updating messages, triggering reconnection...');\n          handleSessionDisconnected();\n          return;\n        }\n      }\n    } catch (error) {\n      console.error('Error updating messages:', error);\n    }\n  };\n\n  const handleChatSelect = async (chat: WhatsAppChat) => {\n    setSelectedChat(chat);\n    await loadMessages(chat.id);\n    \n    // Mark chat as read if it has unread messages\n    if (chat.unreadCount > 0) {\n      try {\n        await fetch(`${backendUrl}/api/whatsapp/mark-read`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            sessionId,\n            chatId: chat.id,\n          }),\n        });\n        \n        // Update the chat in the list to remove unread count\n        setChats(prevChats => \n          prevChats.map(c => \n            c.id === chat.id ? { ...c, unreadCount: 0 } : c\n          )\n        );\n      } catch (error) {\n        console.error('Error marking chat as read:', error);\n      }\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!selectedChat || !newMessage.trim() || isSending) return;\n\n    setIsSending(true);\n    try {\n      const response = await fetch(`${backendUrl}/api/whatsapp/send`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sessionId,\n          to: selectedChat.id,\n          message: newMessage.trim(),\n        }),\n      });\n\n      if (response.ok) {\n        setNewMessage('');\n        // Update messages to show the sent message\n        await updateMessages(selectedChat.id);\n        // Update chat list to show the new message\n        await updateChats();\n      } else {\n        console.error('Failed to send message');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const handleChatListScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    \n    // Load more chats when user scrolls near the bottom\n    if (scrollHeight - scrollTop <= clientHeight * 1.5 && hasMoreChats && !isLoadingMoreChats) {\n      loadChats(false);\n    }\n  };\n\n  const formatTime = (timestamp: number) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const isToday = date.toDateString() === now.toDateString();\n    \n    if (isToday) {\n      return date.toLocaleTimeString('en-US', { \n        hour: '2-digit', \n        minute: '2-digit',\n        hour12: false \n      });\n    } else {\n      return date.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric' \n      });\n    }\n  };\n\n  const formatMessageTime = (timestamp: number) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit',\n      hour12: false \n    });\n  };\n\n  // Generate consistent color for each contact name\n  const getContactColor = (authorName: string) => {\n    // WhatsApp-style colors for contact names\n    const colors = [\n      '#00a884', // WhatsApp green\n      '#ff6b35', // Orange\n      '#f7931e', // Amber\n      '#25d366', // Light green\n      '#128c7e', // Teal\n      '#075e54', // Dark teal\n      '#34b7f1', // Blue\n      '#7c4dff', // Purple\n      '#e91e63', // Pink\n      '#ff5722', // Deep orange\n      '#795548', // Brown\n      '#607d8b', // Blue grey\n    ];\n    \n    // Create a simple hash from the name to ensure consistency\n    let hash = 0;\n    for (let i = 0; i < authorName.length; i++) {\n      const char = authorName.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    \n    // Use absolute value and modulo to get a color index\n    const colorIndex = Math.abs(hash) % colors.length;\n    return colors[colorIndex];\n  };\n\n  // Custom hook for profile picture loading\n  const useProfilePicture = (chatId: string) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const profilePicUrl = profilePictures[chatId];\n\n    useEffect(() => {\n      if (profilePictures[chatId] === undefined && !loading) {\n        setLoading(true);\n        setError(false);\n        \n        const url = `${backendUrl}/api/whatsapp/profile-picture?sessionId=${sessionId}&chatId=${encodeURIComponent(chatId)}`;\n        \n        fetch(url)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error(`HTTP ${response.status}`);\n            }\n            return response.json();\n          })\n          .then(data => {\n            setProfilePictures(prev => ({\n              ...prev,\n              [chatId]: data.profilePicUrl || ''\n            }));\n          })\n          .catch(err => {\n            console.error(`Failed to load profile picture for ${chatId}:`, err);\n            setError(true);\n            setProfilePictures(prev => ({\n              ...prev,\n              [chatId]: ''\n            }));\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      }\n    }, [chatId, loading]);\n\n    return { profilePicUrl, loading, error };\n  };\n\n  // Profile Picture Component\n  const ProfilePicture = ({ chatId, name, size = 'w-12 h-12' }: { chatId: string; name: string; size?: string }) => {\n    const { profilePicUrl, loading } = useProfilePicture(chatId);\n    const [imageError, setImageError] = useState(false);\n    \n    const isSmall = size.includes('w-10');\n    const textSize = isSmall ? 'text-sm' : 'text-lg';\n\n    return (\n      <div className={`${size} bg-[#3b4a54] rounded-full flex items-center justify-center overflow-hidden relative`}>\n        {profilePicUrl && profilePicUrl !== '' && !imageError ? (\n          <img \n            src={profilePicUrl} \n            alt={name}\n            className=\"w-full h-full object-cover\"\n            onError={() => {\n              setImageError(true);\n            }}\n          />\n        ) : (\n          <span className={`${textSize} font-semibold text-white/80`}>\n            {name.charAt(0).toUpperCase()}\n          </span>\n        )}\n        {loading && (\n          <div className=\"absolute inset-0 bg-[#3b4a54] bg-opacity-50 flex items-center justify-center\">\n            <span className=\"loading loading-spinner loading-xs text-white\"></span>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"h-screen bg-base-100 flex\">\n      {/* Left Sidebar */}\n      <div className=\"w-16 bg-[#202c33] flex flex-col items-center py-4 border-r border-[#2a3942]\">\n        {/* Chat Icon */}\n        <button className=\"w-10 h-10 bg-[#00a884] hover:bg-[#00a884]/90 rounded-lg flex items-center justify-center mb-4 transition-colors\">\n          <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z\"/>\n          </svg>\n        </button>\n        \n        {/* Disconnect Button */}\n        <button \n          onClick={onDisconnect}\n          className=\"w-10 h-10 bg-[#f15c6d] hover:bg-[#f15c6d]/90 rounded-lg flex items-center justify-center mt-auto transition-colors\"\n          title=\"Disconnect\"\n        >\n          <svg className=\"w-5 h-5 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M16 17v-3H9v-4h7V7l5 5-5 5M14 2a2 2 0 012 2v2h-2V4H4v16h10v-2h2v2a2 2 0 01-2 2H4a2 2 0 01-2-2V4a2 2 0 012-2h10z\"/>\n          </svg>\n        </button>\n      </div>\n\n      {/* Chat List */}\n      <div className=\"w-80 bg-[#111b21] border-r border-[#2a3942] flex flex-col\">\n        {/* Header */}\n        <div className=\"p-4 border-b border-[#2a3942]\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-xl font-semibold text-white\">Chats</h2>\n            {totalChats > 0 && (\n              <span className=\"text-sm text-white/60\">\n                {chats.length} of {totalChats}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Chat List */}\n        <div className=\"flex-1 overflow-y-auto\" onScroll={handleChatListScroll}>\n          {isLoadingChats ? (\n            <div className=\"p-4 text-center\">\n              <span className=\"loading loading-spinner loading-md text-white\"></span>\n              <p className=\"mt-2 text-sm text-white/60\">Loading chats...</p>\n            </div>\n          ) : chats.length === 0 ? (\n            <div className=\"p-4 text-center\">\n              <p className=\"text-white/60\">No chats found</p>\n            </div>\n          ) : (\n            <>\n              {chats.map((chat) => (\n                <div\n                  key={chat.id}\n                  onClick={() => handleChatSelect(chat)}\n                  className={`p-4 border-b border-[#2a3942] cursor-pointer hover:bg-[#2a3942] transition-colors ${\n                    selectedChat?.id === chat.id ? 'bg-[#2a3942]' : ''\n                  }`}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    {/* Profile Picture */}\n                    <ProfilePicture chatId={chat.id} name={chat.name} />\n\n                    {/* Chat Info */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"font-semibold truncate text-white\">{chat.name}</h3>\n                        {chat.lastMessage && (\n                          <span className=\"text-xs text-white/60\">\n                            {formatTime(chat.lastMessage.timestamp)}\n                          </span>\n                        )}\n                      </div>\n                      {chat.lastMessage && (\n                        <p className=\"text-sm text-white/60 truncate\">\n                          {chat.lastMessage.fromMe ? 'You: ' : ''}\n                          {chat.lastMessage.body}\n                        </p>\n                      )}\n                    </div>\n\n                    {/* Unread Count */}\n                    {chat.unreadCount > 0 && (\n                      <div className=\"w-5 h-5 bg-[#00a884] rounded-full flex items-center justify-center\">\n                        <span className=\"text-xs text-white font-semibold\">\n                          {chat.unreadCount > 9 ? '9+' : chat.unreadCount}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Loading more indicator */}\n              {isLoadingMoreChats && (\n                <div className=\"p-4 text-center\">\n                  <span className=\"loading loading-spinner loading-sm text-white\"></span>\n                  <p className=\"mt-2 text-xs text-white/60\">Loading more chats...</p>\n                </div>\n              )}\n              \n              {/* End of chats indicator */}\n              {!hasMoreChats && chats.length > 0 && (\n                <div className=\"p-4 text-center\">\n                  <p className=\"text-xs text-white/40\">\n                    Showing all {totalChats} chats\n                  </p>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Chat Area */}\n      <div className=\"flex-1 flex flex-col\">\n        {selectedChat ? (\n          <>\n            {/* Chat Header */}\n            <div className=\"p-4 border-b border-[#2a3942] bg-[#202c33]\">\n              <div className=\"flex items-center gap-3\">\n                <ProfilePicture chatId={selectedChat.id} name={selectedChat.name} size=\"w-10 h-10\" />\n                <div>\n                  <h3 className=\"font-semibold text-white\">{selectedChat.name}</h3>\n                  <p className=\"text-xs text-white/60\">\n                    {selectedChat.isGroup ? 'Group' : 'Contact'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Messages */}\n            <div className=\"flex-1 overflow-y-auto p-4\" style={{ backgroundColor: '#0b141a', backgroundImage: 'url(\"data:image/svg+xml,%3Csvg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cdefs%3E%3Cpattern id=\"a\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\"%3E%3Cpath d=\"M0 0h100v100H0z\" fill=\"%23182229\"/%3E%3Cpath d=\"M20 20h60v60H20z\" fill=\"%231e2428\" opacity=\"0.1\"/%3E%3C/pattern%3E%3C/defs%3E%3Crect width=\"100%25\" height=\"100%25\" fill=\"url(%23a)\"/%3E%3C/svg%3E\")' }}>\n              {isLoadingMessages ? (\n                <div className=\"text-center py-8\">\n                  <span className=\"loading loading-spinner loading-md text-white\"></span>\n                  <p className=\"mt-2 text-sm text-white/60\">Loading messages...</p>\n                </div>\n              ) : messages.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <p className=\"text-white/60\">No messages in this chat</p>\n                </div>\n              ) : (\n                <div className=\"space-y-1\">\n                  {messages.map((message, index) => {\n                    const prevMessage = index > 0 ? messages[index - 1] : null;\n                    const nextMessage = index < messages.length - 1 ? messages[index + 1] : null;\n                    \n                    // Group logic: same person if fromMe status and author match\n                    const isSameAuthorAsPrev = prevMessage && \n                      prevMessage.fromMe === message.fromMe && \n                      (message.fromMe || prevMessage.author === message.author);\n                    \n                    const isSameAuthorAsNext = nextMessage && \n                      nextMessage.fromMe === message.fromMe && \n                      (message.fromMe || nextMessage.author === message.author);\n                    \n                    const isFirstInGroup = !isSameAuthorAsPrev;\n                    const isLastInGroup = !isSameAuthorAsNext;\n                    \n                    // Show author name only for the first message in a group\n                    const shouldShowAuthor = selectedChat?.isGroup && !message.fromMe && message.authorName && isFirstInGroup;\n                    \n                    return (\n                      <div\n                        key={message.id}\n                        className={`flex ${message.fromMe ? 'justify-end' : 'justify-start'} ${\n                          isFirstInGroup ? 'mt-2' : 'mt-0.5'\n                        }`}\n                      >\n                        <div\n                          className={`max-w-xs lg:max-w-md px-3 py-1.5 relative ${\n                            message.fromMe\n                              ? 'bg-[#005c4b] text-white rounded-lg'\n                              : 'bg-[#202c33] text-white rounded-lg'\n                          } ${\n                            isFirstInGroup && message.fromMe\n                              ? 'rounded-tr-sm'\n                              : isFirstInGroup && !message.fromMe\n                              ? 'rounded-tl-sm'\n                              : ''\n                          } ${\n                            isLastInGroup && message.fromMe\n                              ? 'rounded-br-sm'\n                              : isLastInGroup && !message.fromMe\n                              ? 'rounded-bl-sm'\n                              : ''\n                          }`}\n                        >\n                          {/* Author name for group messages - only show on first message in group */}\n                          {shouldShowAuthor && (\n                            <p \n                              className=\"text-xs font-semibold mb-1\"\n                              style={{ color: getContactColor(message.authorName || '') }}\n                            >\n                              {message.authorName}\n                            </p>\n                          )}\n                          <p className=\"text-sm leading-relaxed break-words whitespace-pre-wrap\">\n                            {message.body}\n                          </p>\n                          <div className=\"flex items-center justify-end gap-1 mt-1\">\n                            <span className={`text-xs ${\n                              message.fromMe ? 'text-white/70' : 'text-white/60'\n                            }`}>\n                              {formatMessageTime(message.timestamp)}\n                            </span>\n                            {message.fromMe && (\n                              <svg className=\"w-4 h-4 text-white/70\" fill=\"currentColor\" viewBox=\"0 0 16 15\">\n                                <path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.063-.51zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l3.61 3.463c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.063-.51z\"/>\n                              </svg>\n                            )}\n                          </div>\n                          \n                          {/* Message tail */}\n                          {isLastInGroup && (\n                            <div\n                              className={`absolute bottom-0 w-3 h-3 ${\n                                message.fromMe\n                                  ? '-right-1 bg-[#005c4b]'\n                                  : '-left-1 bg-[#202c33]'\n                              }`}\n                              style={{\n                                clipPath: message.fromMe\n                                  ? 'polygon(0 0, 100% 0, 0 100%)'\n                                  : 'polygon(100% 0, 0 0, 100% 100%)'\n                              }}\n                            />\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                  {/* Scroll anchor */}\n                  <div ref={messagesEndRef} />\n                </div>\n              )}\n            </div>\n\n            {/* Message Input */}\n            <div className=\"p-4 border-t border-[#2a3942] bg-[#202c33]\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"flex-1 bg-[#2a3942] rounded-lg px-4 py-2 flex items-center\">\n                  <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                    placeholder=\"Type a message\"\n                    className=\"flex-1 bg-transparent text-white placeholder-white/60 outline-none\"\n                    disabled={isSending}\n                  />\n                </div>\n                <button\n                  onClick={handleSendMessage}\n                  disabled={!newMessage.trim() || isSending}\n                  className=\"w-10 h-10 bg-[#00a884] hover:bg-[#00a884]/90 disabled:bg-[#3b4a54] disabled:cursor-not-allowed rounded-full flex items-center justify-center transition-colors\"\n                >\n                  {isSending ? (\n                    <span className=\"loading loading-spinner loading-sm text-white\"></span>\n                  ) : (\n                    <svg className=\"w-5 h-5 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center\" style={{ backgroundColor: '#0b141a' }}>\n            <div className=\"text-center\">\n              <div className=\"text-6xl mb-4\">💬</div>\n              <h3 className=\"text-xl font-semibold mb-2 text-white\">WhatsApp Web</h3>\n              <p className=\"text-white/60\">Select a chat to start messaging</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1143, "column": 0}, "map": {"version":3,"sources":["file:///Users/estebandib/Documents/dev/whatsapp-message-scheduler/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport WhatsAppInterface from '../components/WhatsAppInterface';\n\ninterface WhatsAppStatus {\n  status: 'connecting' | 'qr' | 'authenticating' | 'ready' | 'disconnected';\n  qrCode?: string;\n  sessionId?: string;\n}\n\nexport default function Home() {\n  const [whatsappStatus, setWhatsappStatus] = useState<WhatsAppStatus>({ status: 'connecting' });\n  const [stayLoggedIn, setStayLoggedIn] = useState(true);\n  const [isCheckingSession, setIsCheckingSession] = useState(true);\n  const [sessionId] = useState(() => {\n    // Try to get existing session from localStorage first\n    if (typeof window !== 'undefined') {\n      const existingSession = localStorage.getItem('whatsapp-session-id');\n      if (existingSession) {\n        return existingSession;\n      }\n    }\n    // Generate new session ID if none exists\n    const newSessionId = `session-${Date.now()}`;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('whatsapp-session-id', newSessionId);\n    }\n    return newSessionId;\n  });\n  const [isPolling, setIsPolling] = useState(false);\n\n  // Get backend URL from environment\n  const backendUrl = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:3001';\n\n  // Poll for QR code and status updates\n  useEffect(() => {\n    let pollInterval: NodeJS.Timeout;\n\n    const pollWhatsAppStatus = async () => {\n      try {\n        const response = await fetch(`${backendUrl}/api/whatsapp/qr?sessionId=${sessionId}`);\n        const data: WhatsAppStatus = await response.json();\n        \n        setWhatsappStatus(data);\n\n        // Stop polling if connected or disconnected\n        if (data.status === 'ready' || data.status === 'disconnected') {\n          setIsPolling(false);\n        }\n        \n        // Continue polling for authenticating state\n        if (data.status === 'authenticating') {\n          setIsPolling(true);\n        }\n      } catch (error) {\n        console.error('Error polling WhatsApp status:', error);\n        setWhatsappStatus({ status: 'disconnected' });\n        setIsPolling(false);\n      }\n    };\n\n    if (isPolling || whatsappStatus.status === 'connecting' || whatsappStatus.status === 'authenticating') {\n      setIsPolling(true);\n      pollWhatsAppStatus(); // Initial call\n      pollInterval = setInterval(pollWhatsAppStatus, 2000); // Poll every 2 seconds\n    }\n\n    return () => {\n      if (pollInterval) {\n        clearInterval(pollInterval);\n      }\n    };\n  }, [sessionId, isPolling, whatsappStatus.status, backendUrl]);\n\n  // Check for existing session and start polling when component mounts\n  useEffect(() => {\n    const checkExistingSession = async () => {\n      setIsCheckingSession(true);\n      try {\n        // Check if there's an existing session on the backend\n        const response = await fetch(`${backendUrl}/api/whatsapp/status?sessionId=${sessionId}`);\n        const data: WhatsAppStatus = await response.json();\n        \n        if (data.status === 'ready') {\n          // Session is already connected, update state\n          setWhatsappStatus(data);\n          setIsPolling(false);\n        } else {\n          // Start polling for new connection\n          setIsPolling(true);\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        // Start polling anyway\n        setIsPolling(true);\n      } finally {\n        setIsCheckingSession(false);\n      }\n    };\n\n    checkExistingSession();\n  }, [sessionId, backendUrl]);\n\n  const handlePhoneLogin = () => {\n    alert('Phone number login would redirect to WhatsApp Web');\n    window.open('https://web.whatsapp.com', '_blank');\n  };\n\n  const handleDownload = () => {\n    window.open('https://www.whatsapp.com/download', '_blank');\n  };\n\n  const handleRetry = () => {\n    setWhatsappStatus({ status: 'connecting' });\n    setIsPolling(true);\n  };\n\n  const handleDisconnect = async () => {\n    try {\n      // Call backend to disconnect the session\n      await fetch(`${backendUrl}/api/whatsapp/disconnect`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sessionId }),\n      });\n      \n      // Clear session from localStorage\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('whatsapp-session-id');\n      }\n      \n      // Reset to connecting state (will generate new session)\n      window.location.reload();\n    } catch (error) {\n      console.error('Error disconnecting session:', error);\n    }\n  };\n\n  // Authenticating state - QR code scanned, waiting for connection\n  if (whatsappStatus.status === 'authenticating') {\n    return (\n      <div className=\"min-h-screen bg-base-100 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">📱</div>\n          <h1 className=\"text-3xl font-bold text-primary mb-4\">QR Code Scanned!</h1>\n          <p className=\"text-lg mb-6 text-base-content/70\">\n            Great! We detected that you scanned the QR code.<br/>\n            Please wait while we establish the connection...\n          </p>\n          <div className=\"flex flex-col items-center space-y-4\">\n            <span className=\"loading loading-spinner loading-lg text-primary\"></span>\n            <p className=\"text-sm text-base-content/60\">\n              Authenticating with WhatsApp...\n            </p>\n            <div className=\"text-xs text-base-content/40\">\n              Session: {sessionId}\n            </div>\n          </div>\n          \n          {/* Progress steps */}\n          <div className=\"mt-8 max-w-md mx-auto\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 bg-success rounded-full flex items-center justify-center mb-2\">\n                  <svg className=\"w-4 h-4 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <span className=\"text-success font-medium\">QR Scanned</span>\n              </div>\n              <div className=\"flex-1 h-0.5 bg-primary mx-4\"></div>\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center mb-2\">\n                  <span className=\"loading loading-spinner loading-sm text-white\"></span>\n                </div>\n                <span className=\"text-primary font-medium\">Connecting</span>\n              </div>\n              <div className=\"flex-1 h-0.5 bg-base-300 mx-4\"></div>\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-8 h-8 bg-base-300 rounded-full flex items-center justify-center mb-2\">\n                  <span className=\"text-base-content/40\">3</span>\n                </div>\n                <span className=\"text-base-content/40\">Ready</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Success state - Show WhatsApp Interface\n  if (whatsappStatus.status === 'ready') {\n    return (\n      <WhatsAppInterface \n        sessionId={sessionId} \n        onDisconnect={handleDisconnect}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-base-100\">\n      {/* Header */}\n      <div className=\"navbar bg-base-100 border-b border-base-300\">\n        <div className=\"navbar-start\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-8 h-8 bg-success rounded-full flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.687\"/>\n              </svg>\n            </div>\n            <span className=\"text-xl font-semibold\">WhatsApp Message Scheduler</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center min-h-[80vh]\">\n          \n          {/* Left Side - Instructions */}\n          <div className=\"order-2 lg:order-1\">\n            <div className=\"card bg-base-100 shadow-xl border border-base-300 p-8\">\n              <div className=\"card-body items-center text-center\">\n                <h2 className=\"card-title text-2xl mb-6 text-base-content\">\n                  {whatsappStatus.status === 'connecting' && 'Initializing WhatsApp...'}\n                  {whatsappStatus.status === 'qr' && 'Steps to log in'}\n                  {whatsappStatus.status === 'disconnected' && 'Connection Failed'}\n                </h2>\n                \n                {whatsappStatus.status === 'connecting' && (\n                  <div className=\"text-center\">\n                    <span className=\"loading loading-spinner loading-lg text-primary\"></span>\n                    <p className=\"mt-4 text-base-content/70\">\n                      {isCheckingSession ? 'Checking for existing session...' : 'Setting up your WhatsApp connection...'}\n                    </p>\n                  </div>\n                )}\n\n\n\n                {whatsappStatus.status === 'qr' && (\n                  <>\n                    <div className=\"space-y-4 mb-8 text-left w-full max-w-md\">\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"badge badge-outline badge-lg\">1</div>\n                        <div>\n                          <span className=\"font-medium\">Open WhatsApp </span>\n                          <div className=\"inline-flex items-center gap-1\">\n                            <div className=\"w-4 h-4 bg-success rounded-full flex items-center justify-center\">\n                              <svg className=\"w-2.5 h-2.5 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.687\"/>\n                              </svg>\n                            </div>\n                            <span className=\"text-sm\">on your phone</span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"badge badge-outline badge-lg\">2</div>\n                        <div>\n                          <span>On Android tap </span>\n                          <span className=\"font-medium\">Menu</span>\n                          <span className=\"mx-2\">⋮</span>\n                          <span> • On iPhone tap </span>\n                          <span className=\"font-medium\">Settings</span>\n                          <span className=\"ml-2\">⚙️</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"badge badge-outline badge-lg\">3</div>\n                        <div>\n                          <span>Tap </span>\n                          <span className=\"font-medium\">Linked devices</span>\n                          <span>, then </span>\n                          <span className=\"font-medium\">Link device</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"badge badge-outline badge-lg\">4</div>\n                        <div>\n                          <span className=\"font-medium\">Scan the QR code to confirm</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"form-control\">\n                      <label className=\"label cursor-pointer justify-start gap-3\">\n                        <input \n                          type=\"checkbox\" \n                          checked={stayLoggedIn}\n                          onChange={(e) => setStayLoggedIn(e.target.checked)}\n                          className=\"checkbox checkbox-success\" \n                        />\n                        <span className=\"label-text font-medium\">Stay logged in on this browser</span>\n                      </label>\n                    </div>\n                  </>\n                )}\n\n                {whatsappStatus.status === 'disconnected' && (\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl mb-4\">❌</div>\n                    <p className=\"mb-6 text-base-content/70\">\n                      Failed to connect to WhatsApp. Please try again.\n                    </p>\n                    <button \n                      className=\"btn btn-primary\"\n                      onClick={handleRetry}\n                    >\n                      Try Again\n                    </button>\n                  </div>\n                )}\n\n                <div className=\"mt-6\">\n                  <button \n                    className=\"btn btn-outline btn-primary\"\n                    onClick={handlePhoneLogin}\n                  >\n                    Log in with phone number →\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Side - QR Code Display */}\n          <div className=\"order-1 lg:order-2 flex justify-center\">\n            <div className=\"bg-white p-8 rounded-2xl shadow-lg border border-base-300\">\n              {whatsappStatus.status === 'qr' && whatsappStatus.qrCode ? (\n                <img \n                  src={whatsappStatus.qrCode} \n                  alt=\"WhatsApp QR Code\"\n                  className=\"w-[280px] h-[280px]\"\n                />\n              ) : (\n                <div className=\"w-[280px] h-[280px] bg-base-200 animate-pulse rounded-lg flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <span className=\"loading loading-spinner loading-lg\"></span>\n                    <p className=\"mt-4 text-sm text-base-content/60\">\n                      {whatsappStatus.status === 'connecting' && 'Generating QR Code...'}\n                      {whatsappStatus.status === 'disconnected' && 'Connection Failed'}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Download Section */}\n        <div className=\"mt-12\">\n          <div className=\"card bg-base-100 shadow-lg border border-base-300\">\n            <div className=\"card-body\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"w-12 h-12 bg-success rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-bold text-lg\">Download WhatsApp for Mac</h3>\n                    <p className=\"text-base-content/70\">Make calls and get a faster experience when you download the Mac app.</p>\n                  </div>\n                </div>\n                <button \n                  className=\"btn btn-success\"\n                  onClick={handleDownload}\n                >\n                  Download ↓\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer Info */}\n        <div className=\"mt-8 text-center\">\n          <div className=\"flex items-center justify-center gap-2 text-base-content/60\">\n            <p>Don&apos;t have a WhatsApp account?</p>\n            <a href=\"https://www.whatsapp.com/download\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link link-success font-medium\">Get started →</a>\n          </div>\n          <div className=\"mt-4 flex items-center justify-center gap-2 text-sm text-base-content/50\">\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z\"/>\n            </svg>\n            <span>Your personal messages are end-to-end encrypted</span>\n          </div>\n          {(whatsappStatus.status === 'qr' || whatsappStatus.status === 'disconnected') && (\n            <div className=\"mt-2 text-xs text-base-content/40\">\n              Session: {sessionId} • Status: {whatsappStatus.status}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}